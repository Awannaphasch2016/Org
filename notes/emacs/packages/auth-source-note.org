#+TITLE: Auth Source Note
#+hugo_base_dir: /home/awannaphasch2016/org/projects/sideprojects/website/my-website/hugo/quickstart
#+filetags: auth_source

The =auth-source= library looks for passwords in a set of sources configured by the variable =auth-sources=.

By default it looks at:
- =~/.authinfo.gpg=
- =~/.authinfo=
- =~/.netrc=

You can add additional auth sources to this list if you store your passwords anothe way. For example.

- macOS keychain ("internet" or "generic")
- Linux Secret Service
- GNOME Keyring
- KWallet

You should try the =M-x customize= (customize UI) for configuring the possible optinons.

* Blog :blog:
** Implementation of X where X = Emac's auth-source.
:PROPERTIES:
:EXPORT_FILE_NAME: Implementation of X where X = Emac's auth-source.
:END:

As an example, I will use =api.github.com= as a API endpoint.

If I use =~/.authinfo.gpg= as an auth-sources file. (variable name is =auth-sources=), I need to add the following to the file where I need to sub value into =user-username= and =user-password=.
#+BEGIN_SRC org
machine api.github.com login user-name password user-password
#+END_SRC

~auth-source-search~ is a function that retrieve password from your specify auth-sources file. You can use it as followed. This will output list of property where =:secret= key has your password as its value.
#+BEGIN_SRC emacs-lisp
(apply #'auth-source-search
       (append '(:host "api.github.com" :user "awannaphasch2016^forge") (list :max 1)))
#+END_SRC

* References
** Tutorials
[[https://www.youtube.com/watch?v=nZ_T7Q49B8Y&ab_channel=SystemCrafters][How to encrypt Your Passwords with Emacs]]

* Encrypting =.authinfo.gpg= with Emacs
Emacs has its own automatic encryption behavior based on file suffix e.g. =.gpg= (see [[file:~/org/notes/emacs/emacs-note.org::*Emacs Encryption mechanism.][here]]), so we can create a file named =.authinfo.gpg= with the same contents to have them be encrypted on save.
* Benefit of using =auth-source= approach. (file based encryption.)
The benefit of using =.authinfo= is that it's a file you have control over an can sync between system. (once encrypted) More easily portable than using one of the desktop environment keyrings.

* How to store/retrieve password in =.authinfo= file?
directly inspired by =.netrc= files which have existe din UNIX for a long time.

Passwords stored in a file named =~/.authinfo= in this format, one per line.

example of password on each file
#+BEGIN_SRC md
machine facebook.com login zuch password w0rldd0m1n4ti0n
#+END_SRC

You can also store passwords for the same host with different ports, usernames, see the following example.
#+BEGIN_SRC md
machine mailprovider.com login mailuser password b4dp4ssw0rd port 433
machine mailprovider.com login mailuser password worsepassword
#+END_SRC

the =auth-source-search= function can read this file and search for entries based on any of the details they contain.

the =auth-source-search= function read this file and search for entries based on any of the details they contains, see example.
#+BEGIN_SRC emacs-lisp
(auth-source-search :host "facebook.com")
(auth-source-search :host "mailprovider.com" :user "mailuser")
(auth-source-search :host "mailprovider.com" :user:"mailuser" :port 433)
#+END_SRC

