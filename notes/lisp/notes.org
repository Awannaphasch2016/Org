#+TITLE: Notes

to see reference and documentttion of elisp, open info page using =info= (=spc-h-i=) and navigate to elisp sections.


* Data Structure

** vectors
Vectors are self-evaluating; that is, the result of evaluating a vector is the vector itself. Its
subexpressions are not evaluated. So if you write:

[a b c]

you'll get a vector containing the three symbols, a, b, and c. If you want a vector containing the
values of variables a, b, and c, you must construct the vector using the vector function:

(vector a b c) â‡’ [17 37 42]
** association list (alist)
association list is a list of key/value pairs where values can be accessed by their associated key.

example of a list containing 2 pairs (tuple).
#+BEGIN_SRC emacs-lisp :noeval
'((mode . (org-mode helpful-mode help-mode))
  (reuseable-freams .t))
#+END_SRC


* Useful functions/commands/variables
** Data Structure
*** List
~-last-time~ get last item
~s-split~ splits S into substrings bounded by matches for regexp SEPARATOR.
*** String
~symbol-name~ get symbol name of a function.
** Buffers
*** Mini Buffer
~read-string~ read input from mini buffer
