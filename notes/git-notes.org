#+TITLE: Git Notes

* Map of Contents (MOCs)
** How to write better git comment message
- ref
  - [[https://www.youtube.com/watch?v=Hlp-9cdImSM&ab_channel=KieCodes][How to commit better with Git.]]

Rule of thumb, from [[https://softwareengineering.stackexchange.com/questions/74764/how-often-should-i-do-you-make-commits][here]].
#+BEGIN_QUOTE
Whenever I have something that works (meaning, doesn't break anything for anyone else) I'll do a check-in. I write most of my stuff test first, so that means every time I have a new test that passes, I check-in.

In practice that means a few times per hour. At least a couple of times every hour, with 5 being quite a bit.
#+END_QUOTE

* Command line
login
#+BEGIN_SRC sh :noeval
gh auth login
#+END_SRC

upload tmp2.txt file to gist with description "my test gist."
#+BEGIN_SRC sh :noeval
echo 'anak' >  tmp2.txt | gh gist create -d "my test gist" -f tmp2.txt
#+END_SRC
* Authentication
** Credential caching
ref:
Stack overflow: [[https://stackoverflow.com/questions/6565357/git-push-requires-username-and-password][Permanently authenticating git repos]]
Github Doc: [[https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git#platform-linux][Caching your GitHub credentials in Git]]

From =git config --help=
#+BEGIN_QUOTE
Credential.helper
    Specify an external helper to be called when a username or password credential is needed; the helper
    may consult external storage to avoid prompting the user for the credentials. Note that multiple
    helpers may be defined. See gitcredentials(7) for details.
#+END_QUOTE

To cache git credentials, you must use GCM core by set up =credential.help=
#+BEGIN_SRC sh
git config credential.helper store
#+END_SRC

To specify caching expire.
#+BEGIN_SRC sh
git config --global credential.helper 'cache --timeout 7200'
#+END_SRC

Once, you set up GCM core and type in credential for the first time.
Crentials will be cached, and you no longer need to type it for the second time and beyond.
#+BEGIN_SRC sh
git push https://github.com/owner/repo.git
#+END_SRC

** [[https://github.com/microsoft/Git-Credential-Manager-Core][Git Credential Manager Core]] (GCM Core)
To read about, GCM core status and support, see [[https://github.com/microsoft/Git-Credential-Manager-Core#current-status][here]].
To read about how to use GCM, see [[https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git#git-credential-manager-core][here]].

Once you've authenticated successfully, your credentials are stored in the Windows credential manager and will be used every time you clone an HTTPS URL. Git will not require you to type your credentials in the command line again unless you change your credentials.

** Switching git permission
To read more about gitcredentials from git documentation, see [[https://git-scm.com/docs/gitcredentials][here]].

Note: I haven't read it. just skimmed through, and failed.

Permission information can be found at =~/.gitconfig~=

To change, credentials (Often, you need this option when you need different set of permissions.),
see [[https://stackoverflow.com/questions/20195304/how-do-i-update-the-password-for-git][here]].

Error: I couldn't do it sucessfully.
#+BEGIN_SRC sh
git config --global credential.helper osxkeychain
#+END_SRC
After, a username and password prompt will appear with your next Git action (pull, clone, push, etc.).
