#+TITLE: Notes
#+hugo_base_dir: /home/awannaphasch2016/org/projects/sideprojects/website/my-website/hugo/quickstart
#+filetags: doom

* Blog :blog:
** Using terminals in Doom Emacs. :terminal:
:PROPERTIES:
:EXPORT_FILE_NAME: Using terminals in Doom Emacs.
:END:

To open multiple terminal, a neat trick is to rename file buffer that terminal is opened [fn:1].

To open file from terminal, one can just =M-x find-file= in the terminal buffer.

*** Footnotes
[fn:1] [[https://stackoverflow.com/questions/2785950/more-than-one-emacs-terminal][stackoverflow: More than one emacs terminal]]
** Keybinding In Doom Emacs :doom:keybinding:
:PROPERTIES:
:EXPORT_FILE_NAME: Keybinding In Doom Emacs
:END:

Doom Emacs has its own keybinding system. A more accurate access would be Doom Emacs keybinding system is a wrapper over evil mode such that it is smoothly compatible with Emacs.

If you use Evil mode without Emacs configuration framework such as Spacemacs or Doom Emacs, it is frustrating to  know if your keybinding is setup properly and will always work as expected at any circumstances. The usually point of failure is when your keybinding is overwritten by other packages. Most of the time, creators of those packages don't use evil-mode, so their implementation don't respect evil-mode, rightfully so.

This is annoying because there is no peace of mind. You can't assume that it will always works in all cases. It always a process of "lets try it here, there, what about that, ...". Because of this, sometimes if I don't need the binding that BADLY, I don't even try it.

Another annoying point is it is one of those problem that you think it should be fixed long along. Also, its one of those that is not that hard to try to solve, but it isn't that interesting enough. You also have to expect iterative process of re-implementing things whenever edge cases came up. tedious process of boringness. And because it is solvable, you can't even blame others, but yourself to not solve it.

Thanks God.

Dooms Emacs solves this problem for us. I am not sure how much Doom Emacs fixed this problem. To my knowledge, I have no problem YET using Doom Emacs keybinding configuration system.

About how to use it. I think its pretty obvious from provided examples in documentation.
I will just explains how to think about it before setup your own key.

Assuming that you use evil-mode,
1. which map you will to use the key? (=:map=)
2. which "evil state" or "emacs state" you expect to use the key?
3. is there any condition you want to be true to enable the key? (:when)
4. Do you use any prefix? if yes, is it =:leader=, =:localleader=, or =:prefix= (your customize prefix).

That's it really.

That's it.
Peace.

* Doom behavior that could cause error
** skipping recompiling/reloading packing (by using cache), see example of the error here ([[*how to fix error that is caused by running the whole =init.el=.]]).
* Errors
** Errors and Debugging log (logs of how I debug it).
* Installation

Note:
version of emacs in Ubuntu is lower than version of emacs required by Doom emacs, so you must install the required version following this [[https://github.com/hlissner/doom-emacs/blob/develop/docs/getting_started.org#install][guide]]. (Basically, you must new apt-repo with =add-apt-repository ppa:kelleyk/emacs=)

If =$EMACS= environment variable is not set or incorrectly set, you will get =Can't find emacs in your PATH= error.

* Help section and related info
To open doom emacs documentation, use =doom/help.= which is binded to =spc-h-d-h=
* Notes for Users
:PROPERTIES:
:ID:       64cff068-4e80-464f-b9cb-6e577a0ea3f5
:END:
** Keybinding and Commands
:PROPERTIES:
:ID:       fdbcd28e-343c-48c2-ab6a-deefbb20f7d7
:END:
*** scratch pad
:PROPERTIES:
:ID:       d80825f3-dd69-46b6-a378-d95fcacb4fa5
:END:
| commands                              | key | doom keys | custom keys | descriptions |
| doom/switch-to-scratch-buffer         |     | spc-b-X   |             |              |
| doom/switch-to-project-scratch-buffer |     | spc-p-X   |             |              |
| doom/open-scratch-buffer              |     | spc-x     |             |              |
| doom/open-project-scratch-buffer      |     | spc-p-x   |             |              |
*** Search in Doom
:PROPERTIES:
:ID:       aa87b05e-c055-42c1-8b69-54ea01f99f1b
:END:
**** bookmark-based search
| commands         | key | doom keys           | custom keys | descriptions                |
| consult-bookmark |     | spc-s-m  OR spc-ret |             | conduct a book mark search. |

**** .doom.d/.emasc.d search
| commands               | key | doom keys | custom keys | descriptions                                                               |
|                        |     | spc-f-P   |             |                                                                            |
|                        |     | spc-f-p   |             |                                                                            |
|                        |     | spc-f-e   |             |                                                                            |
|                        |     | spc-f-E   |             |                                                                            |
| +default/search-emacsd |     | spc-s-e   |             | conduct a text search recursively in files under the =use-emacs-directory= |
**** project-based search
| commands                | key | doom keys | custom keys | descriptions                                                        |
| project-tile-find-file  |     | spc-spc   |             | conduct a file search recursively under the current project folder. |
| +default/search-project |     | spc-s-p   |             | conduct a text search recursively under the current project root.   |
**** buffer search
| commands                                                     | key | doom keys | custom keys | descriptions                                                                            |
| consult-imenu                                                |     | spc-s-i   |             | conduct symbol search on the current buffer                                             |
| +default/search-buffer                                       |     | spc-s-b   |             | conduct text search on the current buffer                                               |
| helm-semantic-or-imenu (consult-imenu built on this command) |     | spc-s-h   |             | Preconfigured helm for semantic or imenu.                                               |
**** directory search
| commands            | key | doom keys | custom keys | descriptions                                                      |
| +default/search-cwd |     | spc-s-d   |             | conduct text search recursively in files under the current folder |
**** org-directory search
| commands                     | key | doom keys | custom keys | descriptions                                  |
| +default/org-notes-search    |     | spc n s   |             | Perform a text search on org-directory.       |
| +default/org-notes-headlines |     | spc n S   |             | Jump to an Org headline in org-agenda-files.  |
| +default/find-in-notes       |     | spc n f   |             | Find a file under org-directory, recursively. |
| +default/browse-notes        |     | spc n F   |             | Browse files from org-directory.              |
**** org agenda search
| commands           | key | doom keys | custom keys | descriptions                   |
| org-agenda         |     | spc o a a |             |                                |
| org-tags-view      |     | spc o a m |             | browse tags                 |
| org-todo-list      |     | spc o a t |             |                                |
| org-search-view    |     | spc o a v |             |                                |
| consult-org-agenda |     | spc m /   |             | Jump to an Org agenda heading. |
**** citation/bibliograph  search
:PROPERTIES:
:ID:       d3cf80b8-09c8-48ac-80fd-61cc4a5b5900
:END:
| commands         | key | doom keys | custom keys | descriptions |
| org-cite-insert  |     | spc m @   |             |              |
| citar-open-entry |     | spc m b   |             |              |
**** buffer/file-based search
| commands                      | key | doom keys        | custom keys | descriptions                                      |
| find-file                     |     | spc-. OR spc-f-f |             | conduct file search under the current folder      |
| +default/find-file-under-here |     | spc-f-F          |             | conduct file recursively under the current folder |
| consult-recent-file           |     | spc-f-r          |             | conduct recently opened file search               |
| -                             |     | spc-s-B          |             | search in all open buffer.                        |

*** Files nad Directory Modification
| commands                                      | key | doom keys | custom keys | descriptions                                              |
| doom/move-this-file                           |     | spc-f-R   |             | Move current buffer's file to NEW-PATH.                   |
| +default/yank-buffer-path                     |     | spc-f-y   |             | Copy the current buffer's path to the kill ring.          |
| +default/yank-buffer-path-relative-to-project |     | spc-f-Y   |             | Copy the current buffer's relative path to the kill ring. |
| doom/delete-this-file                         |     | spc-f-D   |             | delete the current file                                   |
*** editing
| commands   | key | doom keys | custom keys | descriptions                |
| embark act |     |           |             | send command to emabark act |
*** ace
| commands   | key | doom keys | custom keys | descriptions |
| ace-window |     | spc-w-a   |             |              |

* Notes for Developers
** Directory and Files Organization (How is doom-emacs connected to emacs?)
From my inspection, I believe that Doom Module enable in =init.el= are located in =~/.emacs.d/modules/tools= which contains ~README~ and configuration code. (the actual code from downloaded packages are still in =~/.emacs.d/.local/straight/repo=)
** debug with sandbox, see [[https://discourse.doomemacs.org/t/testing-elisp-packages-in-dooms-sandbox/74][here]].
** Debugging
*** avoid outdated byte-compiled elisp files?  see [[https://emacs.stackexchange.com/questions/185/can-i-avoid-outdated-byte-compiled-elisp-files][here]].
set the following
#+BEGIN_SRC emacs-lisp :noeval
(setq load-prefer-newer t)
#+END_SRC
*** how to fix error that is caused by running the whole =init.el=.


Example of the error extracted from =~/.emacs.d/.local/doom.error.log=
#+BEGIN_SRC md
(invalid-read-syntax ")")

(read #<buffer  *load*-815022>)

(eval-buffer #<buffer  *load*-815022> nil "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" nil t)

(load-with-code-conversion "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" nil t)

(load "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads" nil t)

... (more error)
#+END_SRC

From inspecting =eval-buffer= and noticing =(invalid-read-syntax ")")=, I solve the problem by looking in to ="/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el"= and found that there indeed mismatch of parenthesis. (using =check-parens=)
Furthermore, the top of =dap-mode-autoloads.el= mentioned that the file is automatically loaded, acknowledge this fact, I suspect that content has been unintentionally edit.

Note: I could have confirmed by doing =git stash=, but it turns out that elpa doesn't use git to clone (This is why =straight.el= was proposed in the first place, see [[file:~/org/notes/emacs/package-manager/straight.org::*Features][here]])

From abit more digging, I realised that doom emacs have the behavior of reloading/recompiling packages to reduce initialization time, but this cause loading and initialization errors.

* FAQ
