#+TITLE: Notes



* Doom behavior that could cause error
** skipping recompiling/reloading packing (by using cache), see example of the error here ([[*how to fix error that is caused by running the whole =init.el=.]]).
* Errors
** Errors and Debugging log (logs of how I debug it).
* Installation

Note:
version of emacs in Ubuntu is lower than version of emacs required by Doom emacs, so you must install the required version following this [[https://github.com/hlissner/doom-emacs/blob/develop/docs/getting_started.org#install][guide]]. (Basically, you must new apt-repo with =add-apt-repository ppa:kelleyk/emacs=)

If =$EMACS= environment variable is not set or incorrectly set, you will get =Can't find emacs in your PATH= error.

* Help section and related info
To open doom emacs documentation, use =doom/help.= which is binded to =spc-h-d-h=
* Notes for Users
** Keybinding and Commands
*** Search in Doom
**** bookmark-based search
| commands         | key | doom keys           | custom keys | descriptions                |
| consult-bookmark |     | spc-s-m  OR spc-ret |             | conduct a book mark search. |

**** .doom.d/.emasc.d search
| commands | key | doom keys | custom keys | descriptions |
|          |     | spc-f-P   |             |              |
|          |     | spc-f-p   |             |              |
|          |     | spc-f-e   |             |              |
|          |     | spc-f-E   |             |              |
**** project-based search
| commands                | key | doom keys | custom keys | descriptions                                                        |
| project-tile-find-file  |     | spc-spc   |             | conduct a file search recursively under the current project folder. |
| +default/search-project |     | spc-s-p   |             | conduct a text search recursively under the current project root.   |

**** content-based search
| commands               | key | doom keys           | custom keys | descriptions                                                               |
| consult-imenu          |     | spc-s-i             |             | conduct symbol search on the current buffer                                |
| +default/search-buffer |     | spc-s-b             |             | conduct text search on the current buffer                                  |
| +default/search-cwd    |     | spc-s-d             |             | conduct text search recursively in files under the current folder          |
| +default/search-emacsd |     | spc-s-e             |             | conduct a text search recursively in files under the =use-emacs-directory= |

**** file-based search
| commands            | key | doom keys        | custom keys | descriptions                                 |
| find-file           |     | spc-. OR spc-f-f |             | conduct file search under the current folder |
| consult-recent-file |     | spc-f-r          |             | conduct recently opened file search          |

*** Files nad Directory Modification
| commands                                      | key | doom keys | custom keys | descriptions                                              |
| doom/move-this-file                           |     | spc-f-R   |             | Move current buffer's file to NEW-PATH.                   |
| +default/yank-buffer-path                     |     | spc-f-y   |             | Copy the current buffer's path to the kill ring.          |
| +default/yank-buffer-path-relative-to-project |     | spc-f-Y   |             | Copy the current buffer's relative path to the kill ring. |
| doom/delete-this-file                         |     | spc-f-D   |             | delete the current file                                   |

* Notes for Developers
** Directory and Files Organization (How is doom-emacs connected to emacs?)
From my inspection, I believe that Doom Module enable in =init.el= are located in =~/.emacs.d/modules/tools= which contains ~README~ and configuration code. (the actual code from downloaded packages are still in =~/.emacs.d/.local/straight/repo=)
** debug with sandbox, see [[https://discourse.doomemacs.org/t/testing-elisp-packages-in-dooms-sandbox/74][here]].
** Debugging
*** avoid outdated byte-compiled elisp files?  see [[https://emacs.stackexchange.com/questions/185/can-i-avoid-outdated-byte-compiled-elisp-files][here]].
set the following
#+BEGIN_SRC emacs-lisp :noeval
(setq load-prefer-newer t)
#+END_SRC
*** how to fix error that is caused by running the whole =init.el=.


Example of the error extracted from =~/.emacs.d/.local/doom.error.log=
#+BEGIN_SRC md
(invalid-read-syntax ")")

(read #<buffer  *load*-815022>)

(eval-buffer #<buffer  *load*-815022> nil "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" nil t)

(load-with-code-conversion "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el" nil t)

(load "/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads" nil t)

... (more error)
#+END_SRC

From inspecting =eval-buffer= and noticing =(invalid-read-syntax ")")=, I solve the problem by looking in to ="/home/awannaphasch2016/.emacs.d/.local/elpa/dap-mode-20211003.934/dap-mode-autoloads.el"= and found that there indeed mismatch of parenthesis. (using =check-parens=)
Furthermore, the top of =dap-mode-autoloads.el= mentioned that the file is automatically loaded, acknowledge this fact, I suspect that content has been unintentionally edit.

Note: I could have confirmed by doing =git stash=, but it turns out that elpa doesn't use git to clone (This is why =straight.el= was proposed in the first place, see [[file:~/org/notes/emacs/package-manager/straight.org::*Features][here]])

From abit more digging, I realised that doom emacs have the behavior of reloading/recompiling packages to reduce initialization time, but this cause loading and initialization errors.
