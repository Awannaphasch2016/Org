#+TITLE: Personal Knowledge Management Pkm Note
#+hugo_base_dir: /home/awannaphasch2016/org/projects/sideprojects/website/my-website/hugo/quickstart

* Annotation workflow
My goal of managing annotated note in PDF is to satisfied the following condition.
Note: I will not considered hand written notes to be imported to emacs. This case is desired, but excluded for the time being.
1. Annotation made in PDF outside of emacs must be able to imported and sync to org file that represent a note of the PDF.
2. Annotation made in emacs doesn't need to sync back to PDF. (I don't care if annotation I made in emacs will not show up in PDF file when I am reading on PDF file.)

** Annotation workflow review
I added this section to curate useful/interesting way to manage citation either using external tools like zotero to interact with emacs or using emacs packages.

*** How to create link to the highlighted text in PDF file within emacs?
:PROPERTIES:
:ID:       f24216a1-d738-4e25-86cc-15ef5cda4fd7
:END:
- ref
  - [[https://org-roam.discourse.group/t/does-anyone-have-a-workflow-for-associating-notes-with-a-zotero-stored-pdf/112/9][Does anyone have a workflow for associating notes with a Zotero-stored PDF?]]

=titaniumbones= describes his workflow as followed.

My Comment:
From what I understand, he solve a problem of exporting notes he made in PDF (pdfview) by extracting highlights (with org-mode link).

his workflow is already solved by =org-noter= with its ability to provide link to highlighted text in PDF.

Content:

He sets zotfile to store PDF in a directory with a fixed filename pattern. To start his note on these PDF file,  he uses =org-protocol bookmarlet=.

he provided the code to implement his workflow.
#+BEGIN_SRC emacs-lisp
(setq org-roam-capture-ref-templates
    '(("r" "ref" plain (function org-roam-capture--get-point)
        ""
        :file-name "${slug}"
        :head "#+TITLE: ${title}
,#+ROAM_KEY: ${ref}
,#+ROAM_ALIAS:
:PROPERTIES:
:TYPE: cite, article, reference, idea, task, book
:END:

Entered on %u\n

%i

,#+begin_src emacs-lisp :var thispdf=\"/home/matt/Dropbox/Zotero/\"
(pdf-annot-markups-as-org-text thispdf nil 1 )
,#+end_src"
        :unnarrowed t
        :immediate-finish t)))
)
#+END_SRC

=pdf-annot-markups-as-org-text= is defined below
#+BEGIN_SRC emacs-lisp
(defun pdf-annot-markups-as-org-text (pdfpath &optional title level)
"Acquire highligh annotations as text, and return as org-heading"

(interactive "fPath to PDF: ")
(let* ((outputstring "") ;; the text to be returned
        (title (or title (replace-regexp-in-string "-" " " (file-name-base pdfpath ))))
        (level (or level (1+ (org-current-level)))) ;; I guess if we're not in an org-buffer this will fail
        (levelstring (make-string level ?*)) ;; set headline to proper level
        (annots (sort (pdf-info-getannots nil pdfpath)  ;; get and sort all annots
                        'pdf-annot-compare-annotations))
        )
    ;; create the header
    (setq outputstring (concat levelstring " Quotes From " title "\n\n")) ;; create heading

    ;; extract text
    (mapc
    (lambda (annot) ;; traverse all annotations
        (if (eq 'highlight (assoc-default 'type annot))
            (let* ((page (assoc-default 'page annot))
                ;; use pdf-annot-edges-to-region to get correct boundaries of highlight
                (real-edges (pdf-annot-edges-to-region
                                (pdf-annot-get annot 'markup-edges)))
                (text (or (assoc-default 'subject annot) (assoc-default 'content annot)
                            (replace-regexp-in-string "\n" " " (pdf-info-gettext page real-edges nil pdfpath)
                                                    ) ))

                (height (nth 1 real-edges)) ;; distance down the page
                ;; use pdfview link directly to page number
                (linktext (concat "[[pdfview:" pdfpath "::" (number-to-string page)
                                    "++" (number-to-string height) "][" title  "]]" ))
                )
            (setq outputstring (concat outputstring text " ("
                                        linktext ", " (number-to-string page) ")\n\n"))
            )))
    annots)
    outputstring ;; return the header
    )
#+END_SRC

* Blog
** Don't pick between org roam and org brain. Use them together!!
:PROPERTIES:
:EXPORT_FILE_NAME: Don't pick between org roam and org brain. Use them together!!
:ID:       3e50f61e-c80d-4481-941c-c067d61e6aef
:END:
- ref
  - list of dicussion about using org roam and org brain together
    - [[https://www.reddit.com/r/emacs/comments/gz4lk8/org_brain_and_org_roam/][Reddit post: org brain and org roam]]
    - [[https://github.com/Kungsgeten/org-brain/issues/340][Org brain issue: (Idea) Org roam brain mode]]

I personally use org roam to add notes. It is a great tools for connecting ideas and notes.

But if i am being honest, graph visualization is disspointingly useless. I am not I am not the only one.

For the past 3-4 years also, I have seen attempt to make grpah visualization useful.
Some even use machine learning to power up the graph features, [[https://www.youtube.com/channel/UCK2IvRB36OUwXwMRD1iDmvg][Nodus Labs]] tried running machine learning on top of roam research graph [fn:1].

In summary, None of them really work. No one adopt it. Those features are bummer.

Then, I found =org brain=. Well, I know about it for a while, but I never tried it out.

Abit of back story, =org brain= is a rip off of =The Brain= app. (This is why free software is amazing.)

As a evil mode user, =org brain= was really awkward to adopt. This is because it doesn't have built to support evil mode.

Given it more time and looking pass the awkwardness, I started to understand that =org brain= main benefit is from explicitly linking things together.

Now, you may thing "explicitly linking things? bummer. Next." Not so far, unlike other explicit link that come before it such as heirarchical structure (like putting things in folder) and tagging system. (incluing grouping tags, inheritance tags, etc. Org brain allows one to link any two "entry" together.

There are two types of link in org brain.
1. parent-child
2. friend-friend

Furthermore, a link can hold attribute. (e.g. Dad -love-> son).

To sum it up, org brain can add explicity linking capability to org roam, which make the graph features of org roam useful, finally.

This form of implicit and explicity linking/group are everywhere. (I should be a standard practice really if you ask me.)

I use it all the time. The one that I recall right away is having notes in a folder (Implicit heirarchical structure). To group notes in a more meaning full ways, I use bookmark.
For example, on the left is bookmark entr and on the right is where file is located.
#+BEGIN_SRC
books/books to read           ~/org/notes/books/books-to-read.org
books/collection of books     ~/Documents/Books/
config/doom emacs/snippet     ~/.emacs.d/.local/straight/repos/snippets/
config/doom emacs/snippet/ma  ~/.doom.d/snippets/org-mode/
config/doom emacs/snippets/o  ~/.doom.d/snippets/org-mode/attr-latex
contacts                      ~/org/contacts.org
emacs regex                   ~/org/notes/regex-notes.org
evaluation.py                 /mnt/c/Users/terng/OneDrive/Documents/Working/tgn/evaluation/evaluation.py
examples/emacs/packages/org   ~/Scratches/Examples/Emacs/Packages/org-drill/spanish.org
examples/emacs/packages/org   ~/Scratches/Examples/Emacs/Packages/org-ref/example.org
glossaries/blockchain         ~/org/glossaries/blockchain.org
glossaries/docker             ~/org/glossaries/docker.org
#+END_SRC

Org roam and org brain though are not meant to be used together. Its features compliment each other perfectly.

That's it.

Peace.
*** Footnotes
[fn:1] [[https://www.youtube.com/watch?v=ePLNXN_cg-w][Visualize your roam research notes to generate new nodes]]
** How to set up org-roam and org-roam-bibtex as building block of emacs as your primary personal knowledge management?
:PROPERTIES:
:EXPORT_FILE_NAME: How to set up org-roam and org-roam-bibtex as building block of emacs as your primary personal knowledge management?
:END:
write about the following.
- org-file-capture
- org-id-update-id-location works but org-roam-id-update-id-location doesn't
- There are two ways to creae new note based on citation: by pick "note" option shown when press referenced citation link OR by run =orb-insert-link=.
